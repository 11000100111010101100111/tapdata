{
  "uid" : "9d1a4c0a6746164d",
  "name" : "test_check",
  "fullName" : "test_pipeline.TestPipeline#test_check",
  "historyId" : "fa38c78c99c895035a3d9c2796cb8195",
  "time" : {
    "start" : 1658310447418,
    "stop" : 1658310452903,
    "duration" : 5485
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7fb826ce0710>, except_status=('running',))",
  "statusTrace" : "self = <test.test_pipeline.TestPipeline object at 0x7fb826d12590>\n\n    def test_check(self):\n        p = make_new_pipeline(f\"check_job{random_str()}\")\n        p1 = p.readFrom(source_name)\n        p1.dag.jobType = JobType.sync\n        p2 = p1.writeTo(sink_name)\n        p2.start()\n>       assert wait_scheduling(p2, except_status=('running',))\nE       AssertionError: assert False\nE        +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7fb826ce0710>, except_status=('running',))\n\ntest_pipeline.py:253: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7fb826ce0710>, except_status=('running',))",
    "statusTrace" : "self = <test.test_pipeline.TestPipeline object at 0x7fb826d12590>\n\n    def test_check(self):\n        p = make_new_pipeline(f\"check_job{random_str()}\")\n        p1 = p.readFrom(source_name)\n        p1.dag.jobType = JobType.sync\n        p2 = p1.writeTo(sink_name)\n        p2.start()\n>       assert wait_scheduling(p2, except_status=('running',))\nE       AssertionError: assert False\nE        +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7fb826ce0710>, except_status=('running',))\n\ntest_pipeline.py:253: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "93fb15a0bf1be2a6",
      "name" : "stdout",
      "source" : "93fb15a0bf1be2a6.txt",
      "type" : "text/plain",
      "size" : 3077
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "pipeline"
  }, {
    "name" : "suite",
    "value" : "test_pipeline"
  }, {
    "name" : "subSuite",
    "value" : "TestPipeline"
  }, {
    "name" : "host",
    "value" : "3b3df1db6711"
  }, {
    "name" : "thread",
    "value" : "520-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_pipeline"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9d1a4c0a6746164d.json",
  "parameterValues" : [ ]
}