{
  "uid" : "a1fb02081311e136",
  "name" : "test get job status",
  "fullName" : "test_pipeline.TestPipeline#test_stats",
  "historyId" : "7fd126ae87f4bbc0fdebf1dc86f6005c",
  "time" : {
    "start" : 1660893912962,
    "stop" : 1660893919980,
    "duration" : 7018
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7ff8f24f40d0>, except_status=('running',))",
  "statusTrace" : "self = <test.test_pipeline.TestPipeline object at 0x7ff8f22a6e90>\n\n    @allure.title(\"test get job status\")\n    def test_stats(self):\n        p = make_new_pipeline(f\"stats_{random_str()}\")\n        p1 = p.readFrom(source_name).writeTo(sink_name)\n        p1.start()\n>       assert wait_scheduling(p1, except_status=('running', ))\nE       AssertionError: assert False\nE        +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7ff8f24f40d0>, except_status=('running',))\n\ntest_pipeline.py:235: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7ff8f24f40d0>, except_status=('running',))",
    "statusTrace" : "self = <test.test_pipeline.TestPipeline object at 0x7ff8f22a6e90>\n\n    @allure.title(\"test get job status\")\n    def test_stats(self):\n        p = make_new_pipeline(f\"stats_{random_str()}\")\n        p1 = p.readFrom(source_name).writeTo(sink_name)\n        p1.start()\n>       assert wait_scheduling(p1, except_status=('running', ))\nE       AssertionError: assert False\nE        +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7ff8f24f40d0>, except_status=('running',))\n\ntest_pipeline.py:235: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2b42b434ed29a4ca",
      "name" : "stdout",
      "source" : "2b42b434ed29a4ca.txt",
      "type" : "text/plain",
      "size" : 2896
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "pipeline"
  }, {
    "name" : "suite",
    "value" : "test_pipeline"
  }, {
    "name" : "subSuite",
    "value" : "TestPipeline"
  }, {
    "name" : "host",
    "value" : "7c56e15b303f"
  }, {
    "name" : "thread",
    "value" : "932-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_pipeline"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "8a7303652b769f28",
        "status" : "passed",
        "time" : {
          "start" : 1660883043274,
          "stop" : 1660883048297,
          "duration" : 5023
        }
      }, {
        "uid" : "8c89105de53a57a6",
        "status" : "passed",
        "time" : {
          "start" : 1660820552311,
          "stop" : 1660820557191,
          "duration" : 4880
        }
      }, {
        "uid" : "284ef1ace21eae5d",
        "status" : "passed",
        "time" : {
          "start" : 1660819586619,
          "stop" : 1660819591349,
          "duration" : 4730
        }
      }, {
        "uid" : "cd047cb2ed49b8c0",
        "status" : "passed",
        "time" : {
          "start" : 1660806186782,
          "stop" : 1660806191200,
          "duration" : 4418
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a1fb02081311e136.json",
  "parameterValues" : [ ]
}