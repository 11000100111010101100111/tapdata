/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 30 11:31:17 GMT 2022
 */

package io.tapdata.connector.activemq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.tapdata.connector.activemq.ActivemqConnector;
import io.tapdata.entity.codec.TapCodecsRegistry;
import io.tapdata.entity.schema.TapTable;
import io.tapdata.pdk.apis.context.TapConnectionContext;
import io.tapdata.pdk.apis.entity.TestItem;
import io.tapdata.pdk.apis.functions.ConnectorFunctions;
import java.util.List;
import java.util.Stack;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActivemqConnector_ESTest extends ActivemqConnector_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      TapCodecsRegistry tapCodecsRegistry0 = new TapCodecsRegistry();
      // Undeclared exception!
      try { 
        activemqConnector0.registerCapabilities((ConnectorFunctions) null, tapCodecsRegistry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      Stack<String> stack0 = new Stack<String>();
      try { 
        activemqConnector0.discoverSchema((TapConnectionContext) null, stack0, 1, (Consumer<List<TapTable>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      try { 
        activemqConnector0.tableCount((TapConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      ConnectorFunctions connectorFunctions0 = new ConnectorFunctions();
      TapCodecsRegistry tapCodecsRegistry0 = TapCodecsRegistry.create();
      activemqConnector0.registerCapabilities(connectorFunctions0, tapCodecsRegistry0);
      assertFalse(activemqConnector0.isAlive());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      // Undeclared exception!
      try { 
        activemqConnector0.connectionTest((TapConnectionContext) null, (Consumer<TestItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      try { 
        activemqConnector0.onStart((TapConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnector", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ActivemqConnector activemqConnector0 = new ActivemqConnector();
      // Undeclared exception!
      try { 
        activemqConnector0.onStop((TapConnectionContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnector", e);
      }
  }
}
