/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 30 02:07:04 GMT 2022
 */

package io.tapdata.connector.activemq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.tapdata.connector.activemq.ActivemqConnectorTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ActivemqConnectorTest_ESTest extends ActivemqConnectorTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      activemqConnectorTest0.testTableCount_ThrowsThrowable();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      try { 
        activemqConnectorTest0.testOnStart();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnectorTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      try { 
        activemqConnectorTest0.testTableCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnectorTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      // Undeclared exception!
      try { 
        activemqConnectorTest0.testOnStop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnectorTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      // Undeclared exception!
      try { 
        activemqConnectorTest0.testConnectionTest();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      // Undeclared exception!
      try { 
        activemqConnectorTest0.testDiscoverSchema_ThrowsThrowable();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      // Undeclared exception!
      try { 
        activemqConnectorTest0.testRegisterCapabilities();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.tapdata.connector.activemq.ActivemqConnectorTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      activemqConnectorTest0.testOnStart_ThrowsThrowable();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      activemqConnectorTest0.setUp();
      activemqConnectorTest0.testRegisterCapabilities();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ActivemqConnectorTest activemqConnectorTest0 = new ActivemqConnectorTest();
      try { 
        activemqConnectorTest0.testDiscoverSchema();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }
}
