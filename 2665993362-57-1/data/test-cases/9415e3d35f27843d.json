{
  "uid" : "9415e3d35f27843d",
  "name" : "test_stop",
  "fullName" : "test_pipeline#test_stop",
  "historyId" : "c5bef23014496215c631881ac34cb6c0",
  "time" : {
    "start" : 1657743042166,
    "stop" : 1657743047766,
    "duration" : 5600
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7f9a8fb80b10>, except_status=('running', 'error'))",
  "statusTrace" : "def test_stop():\n        p = make_new_pipeline(f\"stop_{random_str()}\")\n        p1 = p.readFrom(source_mongo_1).writeTo(sink_mysql)\n        p1.start()\n>       assert wait_scheduling(p1, except_status=('running', 'error'))\nE       AssertionError: assert False\nE        +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7f9a8fb80b10>, except_status=('running', 'error'))\n\ntest_pipeline.py:208: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7f9a8fb80b10>, except_status=('running', 'error'))",
    "statusTrace" : "def test_stop():\n        p = make_new_pipeline(f\"stop_{random_str()}\")\n        p1 = p.readFrom(source_mongo_1).writeTo(sink_mysql)\n        p1.start()\n>       assert wait_scheduling(p1, except_status=('running', 'error'))\nE       AssertionError: assert False\nE        +  where False = wait_scheduling(<lib.cli.Pipeline object at 0x7f9a8fb80b10>, except_status=('running', 'error'))\n\ntest_pipeline.py:208: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b00b51cc7aa37d2b",
      "name" : "stdout",
      "source" : "b00b51cc7aa37d2b.txt",
      "type" : "text/plain",
      "size" : 3077
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_pipeline"
  }, {
    "name" : "host",
    "value" : "62c0af892490"
  }, {
    "name" : "thread",
    "value" : "521-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_pipeline"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9415e3d35f27843d.json",
  "parameterValues" : [ ]
}